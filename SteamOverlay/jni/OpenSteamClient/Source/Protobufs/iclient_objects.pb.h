// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iclient_objects.proto

#ifndef PROTOBUF_iclient_5fobjects_2eproto__INCLUDED
#define PROTOBUF_iclient_5fobjects_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace Sc {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_iclient_5fobjects_2eproto();
void protobuf_AssignDesc_iclient_5fobjects_2eproto();
void protobuf_ShutdownFile_iclient_5fobjects_2eproto();

class ClientAppInfo;

// ===================================================================

class ClientAppInfo : public ::google::protobuf::MessageLite {
 public:
  ClientAppInfo();
  virtual ~ClientAppInfo();

  ClientAppInfo(const ClientAppInfo& from);

  inline ClientAppInfo& operator=(const ClientAppInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ClientAppInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ClientAppInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ClientAppInfo* other);

  // implements Message ----------------------------------------------

  ClientAppInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ClientAppInfo& from);
  void MergeFrom(const ClientAppInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 appid = 1;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 1;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // optional bool favorite = 2;
  inline bool has_favorite() const;
  inline void clear_favorite();
  static const int kFavoriteFieldNumber = 2;
  inline bool favorite() const;
  inline void set_favorite(bool value);

  // optional bool installed = 3;
  inline bool has_installed() const;
  inline void clear_installed();
  static const int kInstalledFieldNumber = 3;
  inline bool installed() const;
  inline void set_installed(bool value);

  // optional bool auto_update = 4;
  inline bool has_auto_update() const;
  inline void clear_auto_update();
  static const int kAutoUpdateFieldNumber = 4;
  inline bool auto_update() const;
  inline void set_auto_update(bool value);

  // optional string category = 5;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 5;
  inline const ::std::string& category() const;
  inline void set_category(const ::std::string& value);
  inline void set_category(const char* value);
  inline void set_category(const char* value, size_t size);
  inline ::std::string* mutable_category();
  inline ::std::string* release_category();
  inline void set_allocated_category(::std::string* category);

  // optional string app_type = 6;
  inline bool has_app_type() const;
  inline void clear_app_type();
  static const int kAppTypeFieldNumber = 6;
  inline const ::std::string& app_type() const;
  inline void set_app_type(const ::std::string& value);
  inline void set_app_type(const char* value);
  inline void set_app_type(const char* value, size_t size);
  inline ::std::string* mutable_app_type();
  inline ::std::string* release_app_type();
  inline void set_allocated_app_type(::std::string* app_type);

  // optional bool downloading = 7;
  inline bool has_downloading() const;
  inline void clear_downloading();
  static const int kDownloadingFieldNumber = 7;
  inline bool downloading() const;
  inline void set_downloading(bool value);

  // optional bool download_paused = 8;
  inline bool has_download_paused() const;
  inline void clear_download_paused();
  static const int kDownloadPausedFieldNumber = 8;
  inline bool download_paused() const;
  inline void set_download_paused(bool value);

  // optional uint32 bytes_download_rate = 9;
  inline bool has_bytes_download_rate() const;
  inline void clear_bytes_download_rate();
  static const int kBytesDownloadRateFieldNumber = 9;
  inline ::google::protobuf::uint32 bytes_download_rate() const;
  inline void set_bytes_download_rate(::google::protobuf::uint32 value);

  // optional uint64 bytes_downloaded = 10;
  inline bool has_bytes_downloaded() const;
  inline void clear_bytes_downloaded();
  static const int kBytesDownloadedFieldNumber = 10;
  inline ::google::protobuf::uint64 bytes_downloaded() const;
  inline void set_bytes_downloaded(::google::protobuf::uint64 value);

  // optional uint64 bytes_needed = 11;
  inline bool has_bytes_needed() const;
  inline void clear_bytes_needed();
  static const int kBytesNeededFieldNumber = 11;
  inline ::google::protobuf::uint64 bytes_needed() const;
  inline void set_bytes_needed(::google::protobuf::uint64 value);

  // optional bool changing = 12;
  inline bool has_changing() const;
  inline void clear_changing();
  static const int kChangingFieldNumber = 12;
  inline bool changing() const;
  inline void set_changing(bool value);

  // optional bool available_on_platform = 13;
  inline bool has_available_on_platform() const;
  inline void clear_available_on_platform();
  static const int kAvailableOnPlatformFieldNumber = 13;
  inline bool available_on_platform() const;
  inline void set_available_on_platform(bool value);

  // @@protoc_insertion_point(class_scope:Sc.ClientAppInfo)
 private:
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_favorite();
  inline void clear_has_favorite();
  inline void set_has_installed();
  inline void clear_has_installed();
  inline void set_has_auto_update();
  inline void clear_has_auto_update();
  inline void set_has_category();
  inline void clear_has_category();
  inline void set_has_app_type();
  inline void clear_has_app_type();
  inline void set_has_downloading();
  inline void clear_has_downloading();
  inline void set_has_download_paused();
  inline void clear_has_download_paused();
  inline void set_has_bytes_download_rate();
  inline void clear_has_bytes_download_rate();
  inline void set_has_bytes_downloaded();
  inline void clear_has_bytes_downloaded();
  inline void set_has_bytes_needed();
  inline void clear_has_bytes_needed();
  inline void set_has_changing();
  inline void clear_has_changing();
  inline void set_has_available_on_platform();
  inline void clear_has_available_on_platform();

  ::google::protobuf::uint32 appid_;
  bool favorite_;
  bool installed_;
  bool auto_update_;
  bool downloading_;
  ::std::string* category_;
  ::std::string* app_type_;
  ::google::protobuf::uint64 bytes_downloaded_;
  ::google::protobuf::uint32 bytes_download_rate_;
  bool download_paused_;
  bool changing_;
  bool available_on_platform_;
  ::google::protobuf::uint64 bytes_needed_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_iclient_5fobjects_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_iclient_5fobjects_2eproto();
  #endif
  friend void protobuf_AssignDesc_iclient_5fobjects_2eproto();
  friend void protobuf_ShutdownFile_iclient_5fobjects_2eproto();

  void InitAsDefaultInstance();
  static ClientAppInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// ClientAppInfo

// optional uint32 appid = 1;
inline bool ClientAppInfo::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientAppInfo::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientAppInfo::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientAppInfo::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 ClientAppInfo::appid() const {
  return appid_;
}
inline void ClientAppInfo::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// optional bool favorite = 2;
inline bool ClientAppInfo::has_favorite() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientAppInfo::set_has_favorite() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientAppInfo::clear_has_favorite() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientAppInfo::clear_favorite() {
  favorite_ = false;
  clear_has_favorite();
}
inline bool ClientAppInfo::favorite() const {
  return favorite_;
}
inline void ClientAppInfo::set_favorite(bool value) {
  set_has_favorite();
  favorite_ = value;
}

// optional bool installed = 3;
inline bool ClientAppInfo::has_installed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientAppInfo::set_has_installed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientAppInfo::clear_has_installed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientAppInfo::clear_installed() {
  installed_ = false;
  clear_has_installed();
}
inline bool ClientAppInfo::installed() const {
  return installed_;
}
inline void ClientAppInfo::set_installed(bool value) {
  set_has_installed();
  installed_ = value;
}

// optional bool auto_update = 4;
inline bool ClientAppInfo::has_auto_update() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientAppInfo::set_has_auto_update() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientAppInfo::clear_has_auto_update() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientAppInfo::clear_auto_update() {
  auto_update_ = false;
  clear_has_auto_update();
}
inline bool ClientAppInfo::auto_update() const {
  return auto_update_;
}
inline void ClientAppInfo::set_auto_update(bool value) {
  set_has_auto_update();
  auto_update_ = value;
}

// optional string category = 5;
inline bool ClientAppInfo::has_category() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientAppInfo::set_has_category() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientAppInfo::clear_has_category() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientAppInfo::clear_category() {
  if (category_ != &::google::protobuf::internal::kEmptyString) {
    category_->clear();
  }
  clear_has_category();
}
inline const ::std::string& ClientAppInfo::category() const {
  return *category_;
}
inline void ClientAppInfo::set_category(const ::std::string& value) {
  set_has_category();
  if (category_ == &::google::protobuf::internal::kEmptyString) {
    category_ = new ::std::string;
  }
  category_->assign(value);
}
inline void ClientAppInfo::set_category(const char* value) {
  set_has_category();
  if (category_ == &::google::protobuf::internal::kEmptyString) {
    category_ = new ::std::string;
  }
  category_->assign(value);
}
inline void ClientAppInfo::set_category(const char* value, size_t size) {
  set_has_category();
  if (category_ == &::google::protobuf::internal::kEmptyString) {
    category_ = new ::std::string;
  }
  category_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClientAppInfo::mutable_category() {
  set_has_category();
  if (category_ == &::google::protobuf::internal::kEmptyString) {
    category_ = new ::std::string;
  }
  return category_;
}
inline ::std::string* ClientAppInfo::release_category() {
  clear_has_category();
  if (category_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = category_;
    category_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ClientAppInfo::set_allocated_category(::std::string* category) {
  if (category_ != &::google::protobuf::internal::kEmptyString) {
    delete category_;
  }
  if (category) {
    set_has_category();
    category_ = category;
  } else {
    clear_has_category();
    category_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string app_type = 6;
inline bool ClientAppInfo::has_app_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientAppInfo::set_has_app_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientAppInfo::clear_has_app_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientAppInfo::clear_app_type() {
  if (app_type_ != &::google::protobuf::internal::kEmptyString) {
    app_type_->clear();
  }
  clear_has_app_type();
}
inline const ::std::string& ClientAppInfo::app_type() const {
  return *app_type_;
}
inline void ClientAppInfo::set_app_type(const ::std::string& value) {
  set_has_app_type();
  if (app_type_ == &::google::protobuf::internal::kEmptyString) {
    app_type_ = new ::std::string;
  }
  app_type_->assign(value);
}
inline void ClientAppInfo::set_app_type(const char* value) {
  set_has_app_type();
  if (app_type_ == &::google::protobuf::internal::kEmptyString) {
    app_type_ = new ::std::string;
  }
  app_type_->assign(value);
}
inline void ClientAppInfo::set_app_type(const char* value, size_t size) {
  set_has_app_type();
  if (app_type_ == &::google::protobuf::internal::kEmptyString) {
    app_type_ = new ::std::string;
  }
  app_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClientAppInfo::mutable_app_type() {
  set_has_app_type();
  if (app_type_ == &::google::protobuf::internal::kEmptyString) {
    app_type_ = new ::std::string;
  }
  return app_type_;
}
inline ::std::string* ClientAppInfo::release_app_type() {
  clear_has_app_type();
  if (app_type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = app_type_;
    app_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ClientAppInfo::set_allocated_app_type(::std::string* app_type) {
  if (app_type_ != &::google::protobuf::internal::kEmptyString) {
    delete app_type_;
  }
  if (app_type) {
    set_has_app_type();
    app_type_ = app_type;
  } else {
    clear_has_app_type();
    app_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool downloading = 7;
inline bool ClientAppInfo::has_downloading() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientAppInfo::set_has_downloading() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientAppInfo::clear_has_downloading() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientAppInfo::clear_downloading() {
  downloading_ = false;
  clear_has_downloading();
}
inline bool ClientAppInfo::downloading() const {
  return downloading_;
}
inline void ClientAppInfo::set_downloading(bool value) {
  set_has_downloading();
  downloading_ = value;
}

// optional bool download_paused = 8;
inline bool ClientAppInfo::has_download_paused() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientAppInfo::set_has_download_paused() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientAppInfo::clear_has_download_paused() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientAppInfo::clear_download_paused() {
  download_paused_ = false;
  clear_has_download_paused();
}
inline bool ClientAppInfo::download_paused() const {
  return download_paused_;
}
inline void ClientAppInfo::set_download_paused(bool value) {
  set_has_download_paused();
  download_paused_ = value;
}

// optional uint32 bytes_download_rate = 9;
inline bool ClientAppInfo::has_bytes_download_rate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClientAppInfo::set_has_bytes_download_rate() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClientAppInfo::clear_has_bytes_download_rate() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClientAppInfo::clear_bytes_download_rate() {
  bytes_download_rate_ = 0u;
  clear_has_bytes_download_rate();
}
inline ::google::protobuf::uint32 ClientAppInfo::bytes_download_rate() const {
  return bytes_download_rate_;
}
inline void ClientAppInfo::set_bytes_download_rate(::google::protobuf::uint32 value) {
  set_has_bytes_download_rate();
  bytes_download_rate_ = value;
}

// optional uint64 bytes_downloaded = 10;
inline bool ClientAppInfo::has_bytes_downloaded() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ClientAppInfo::set_has_bytes_downloaded() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ClientAppInfo::clear_has_bytes_downloaded() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ClientAppInfo::clear_bytes_downloaded() {
  bytes_downloaded_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes_downloaded();
}
inline ::google::protobuf::uint64 ClientAppInfo::bytes_downloaded() const {
  return bytes_downloaded_;
}
inline void ClientAppInfo::set_bytes_downloaded(::google::protobuf::uint64 value) {
  set_has_bytes_downloaded();
  bytes_downloaded_ = value;
}

// optional uint64 bytes_needed = 11;
inline bool ClientAppInfo::has_bytes_needed() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ClientAppInfo::set_has_bytes_needed() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ClientAppInfo::clear_has_bytes_needed() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ClientAppInfo::clear_bytes_needed() {
  bytes_needed_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes_needed();
}
inline ::google::protobuf::uint64 ClientAppInfo::bytes_needed() const {
  return bytes_needed_;
}
inline void ClientAppInfo::set_bytes_needed(::google::protobuf::uint64 value) {
  set_has_bytes_needed();
  bytes_needed_ = value;
}

// optional bool changing = 12;
inline bool ClientAppInfo::has_changing() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ClientAppInfo::set_has_changing() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ClientAppInfo::clear_has_changing() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ClientAppInfo::clear_changing() {
  changing_ = false;
  clear_has_changing();
}
inline bool ClientAppInfo::changing() const {
  return changing_;
}
inline void ClientAppInfo::set_changing(bool value) {
  set_has_changing();
  changing_ = value;
}

// optional bool available_on_platform = 13;
inline bool ClientAppInfo::has_available_on_platform() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ClientAppInfo::set_has_available_on_platform() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ClientAppInfo::clear_has_available_on_platform() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ClientAppInfo::clear_available_on_platform() {
  available_on_platform_ = false;
  clear_has_available_on_platform();
}
inline bool ClientAppInfo::available_on_platform() const {
  return available_on_platform_;
}
inline void ClientAppInfo::set_available_on_platform(bool value) {
  set_has_available_on_platform();
  available_on_platform_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Sc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_iclient_5fobjects_2eproto__INCLUDED
